{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/lucasbonomi/Sites/skidip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/lucasbonomi/Sites/skidip/src/App.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n          display: grid;\\n          grid-template-columns: repeat(4, 1fr);\\n          grid-gap: 10px;\\n          grid-auto-rows: minmax(100px, auto);\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        height: 100vh;\\n      \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css, cx } from \"emotion\"; // import Client from \"fortnite\";\n\nimport \"./App.css\"; // const fortnite = new Client(\"425c6cf9-c137-4149-977f-377b7bd33f06\");\n\nconst team = [{\n  name: \"iamfabriceg\",\n  uid: \"2b7897075f20421b81529bdc2ab742f3\"\n}, {\n  name: \"SKIDIP lukyvj\",\n  uid: \"ff29ca89e591485e8d450c2aec558c15\"\n}, {\n  name: \"SKIPID AntShelby\",\n  uid: \"c605a87eba634e8dbfc7fba4448fa87d\"\n}, {\n  name: \"SKIDIP Kingom\",\n  uid: \"0d4f175a990f44a08e0447b56ed42703\"\n}];\n\nconst Board = props => {\n  let statApi = \"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats?user_id=\" + props.uid + \"&platform=ps4\"; // httpRequestAsync(statApi, theResponse);\n\n  fetch(statApi).then(response => response.json()).then(data => console.log(theResponse(data)));\n  let name, wins, kills, kd, matches, winrate;\n  /*  getting response from API and defining variables   */\n\n  function theResponse(response) {\n    console.log(\"getting stats of \" + props.uid);\n    let jsonObject = JSON.parse(response); //example of getting data from api\n\n    console.log(\"Name: \" + jsonObject.username);\n    console.log(\"Wins: \" + jsonObject.totals.wins);\n    console.log(\"Kills: \" + jsonObject.totals.kills);\n    console.log(\"K/D: \" + jsonObject.totals.kd);\n    console.log(\"Matches: \" + jsonObject.totals.matchesplayed);\n    console.log(\"Winrate: \" + jsonObject.totals.winrate + \"%\");\n    name = jsonObject.username;\n    wins = jsonObject.totals.wins;\n    kills = jsonObject.totals.kills;\n    kd = jsonObject.totals.kd;\n    matches = jsonObject.totals.matchesplayed;\n    winrate = jsonObject.totals.winrate;\n  }\n\n  return React.createElement(\"div\", {\n    className: css(_templateObject()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"@\", props.name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Name: \", name, \"Wins: \", wins, \"Kills: \", kills, \"K/D:\", kd, \"Matches: \", matches, \"Winrate: \", winrate, \"%\"));\n};\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: cx(\"App\", css(_templateObject2())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, team.map((member, index) => React.createElement(Board, {\n    name: member.name,\n    uid: member.uid,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}\n\nfunction httpRequestAsync(api, callback) {\n  var httpRequest = new XMLHttpRequest();\n\n  httpRequest.onreadystatechange = () => {\n    if (httpRequest.readyState === 4 && httpRequest.status === 200) callback(httpRequest.responseText);\n  };\n\n  httpRequest.open(\"GET\", api, true);\n  httpRequest.send();\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lucasbonomi/Sites/skidip/src/App.js"],"names":["React","css","cx","team","name","uid","Board","props","statApi","fetch","then","response","json","data","console","log","theResponse","wins","kills","kd","matches","winrate","jsonObject","JSON","parse","username","totals","matchesplayed","App","map","member","index","httpRequestAsync","api","callback","httpRequest","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css, cx } from \"emotion\";\n// import Client from \"fortnite\";\nimport \"./App.css\";\n\n// const fortnite = new Client(\"425c6cf9-c137-4149-977f-377b7bd33f06\");\n\nconst team = [\n  { name: \"iamfabriceg\", uid: \"2b7897075f20421b81529bdc2ab742f3\" },\n  { name: \"SKIDIP lukyvj\", uid: \"ff29ca89e591485e8d450c2aec558c15\" },\n  { name: \"SKIPID AntShelby\", uid: \"c605a87eba634e8dbfc7fba4448fa87d\" },\n  { name: \"SKIDIP Kingom\", uid: \"0d4f175a990f44a08e0447b56ed42703\" }\n];\n\nconst Board = props => {\n  let statApi =\n    \"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats?user_id=\" +\n    props.uid +\n    \"&platform=ps4\";\n\n  // httpRequestAsync(statApi, theResponse);\n\n  fetch(statApi)\n    .then(response => response.json())\n    .then(data => console.log(theResponse(data)));\n\n  let name, wins, kills, kd, matches, winrate;\n  /*  getting response from API and defining variables   */\n  function theResponse(response) {\n    console.log(\"getting stats of \" + props.uid);\n    let jsonObject = JSON.parse(response);\n    //example of getting data from api\n    console.log(\"Name: \" + jsonObject.username);\n    console.log(\"Wins: \" + jsonObject.totals.wins);\n    console.log(\"Kills: \" + jsonObject.totals.kills);\n    console.log(\"K/D: \" + jsonObject.totals.kd);\n    console.log(\"Matches: \" + jsonObject.totals.matchesplayed);\n    console.log(\"Winrate: \" + jsonObject.totals.winrate + \"%\");\n    name = jsonObject.username;\n    wins = jsonObject.totals.wins;\n    kills = jsonObject.totals.kills;\n    kd = jsonObject.totals.kd;\n    matches = jsonObject.totals.matchesplayed;\n    winrate = jsonObject.totals.winrate;\n  }\n\n  return (\n    <div\n      className={css`\n        height: 100vh;\n      `}\n    >\n      <h1>@{props.name}</h1>\n      <div>\n        Name: {name}\n        Wins: {wins}\n        Kills: {kills}\n        K/D:{kd}\n        Matches: {matches}\n        Winrate: {winrate}%\n      </div>\n    </div>\n  );\n};\nfunction App() {\n  return (\n    <div\n      className={cx(\n        \"App\",\n        css`\n          display: grid;\n          grid-template-columns: repeat(4, 1fr);\n          grid-gap: 10px;\n          grid-auto-rows: minmax(100px, auto);\n        `\n      )}\n    >\n      {team.map((member, index) => (\n        <Board name={member.name} uid={member.uid} key={index} />\n      ))}\n    </div>\n  );\n}\n\nfunction httpRequestAsync(api, callback) {\n  var httpRequest = new XMLHttpRequest();\n  httpRequest.onreadystatechange = () => {\n    if (httpRequest.readyState === 4 && httpRequest.status === 200)\n      callback(httpRequest.responseText);\n  };\n  httpRequest.open(\"GET\", api, true);\n  httpRequest.send();\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}